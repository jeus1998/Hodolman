plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.asciidoctor.jvm.convert" version "3.3.2" // 1: asciidoctor 플러그인 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    asciidoctorExt // 2
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring REST Docks
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor' // 3
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc' // 4

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // configuration properties
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation 'org.springframework.boot:spring-boot-starter-validation' // validation 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JWT 라이브러리
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
}

ext {
    snippetsDir = file('build/generated-snippets') // 5
}

test{
    outputs.dir snippetsDir // 6
}

asciidoctor { // 7
	inputs.dir snippetsDir // 8
	configurations 'asciidoctorExt' // 9
	dependsOn test // 10 asciidoctor 수행하기전 test 수행하도록 선언
}

bootJar {
	dependsOn asciidoctor

    copy{
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jar{
  enabled = false
}